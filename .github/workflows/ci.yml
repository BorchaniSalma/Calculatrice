name: Build, Analyze, and Docker Push

on:
  push:
    branches:
      - master

jobs:
  build-and-analyze:
    name: Build, SonarQube Analysis, Snyk Scan, and Docker Push
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      # Run tests and generate coverage report
      - name: Run tests with coverage
        run: |
          coverage run --rcfile=.coveragerc --source=calculatrice -m pytest
          coverage xml -o coverage.xml

      # Fix coverage paths to be relative (if needed)
      - name: Fix coverage paths
        if: ${{ always() }}
        run: |
          sed -i 's|<source>.*/Calculatrice/||g' coverage.xml

      # SonarCloud analysis with coverage report
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.python.version=3.9
            -Dsonar.python.coverage.reportPaths=coverage.xml

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python-github-actions:latest .

      # Install Snyk
      - name: Install Snyk
        run: |
          npm install -g snyk

      # Authenticate Snyk
      - name: Authenticate Snyk
        run: |
          snyk auth ${{ secrets.SNYK_TOKEN }}

      # Run Snyk scan
      - name: Snyk Docker Image Scan
        run: |
          snyk container test ${{ secrets.DOCKER_USERNAME }}/python-github-actions:latest --file=Dockerfile --severity-threshold=high
        continue-on-error: true

      # Push Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-github-actions:latest
