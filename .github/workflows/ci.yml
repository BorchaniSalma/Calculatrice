name: Build, Analyze, and Docker Push

on:
  push:
    branches:
      - master

jobs:
  build-and-analyze:
    name: Build, SonarQube Analysis, Snyk Scan, and Docker Push
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests with coverage using setup.py
      - name: Run tests with coverage
        run: |
          coverage run --append --source=calculatrice setup.py test
          coverage xml -o coverage.xml
          coverage report

      # Fix coverage paths and print for debugging
      - name: Fix coverage paths
        run: |
          sed -i 's|/home/runner/work/Calculatrice/Calculatrice/||g' coverage.xml
          cat coverage.xml

      # SonarCloud analysis with coverage report
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.python.version=3.9
            -Dsonar.python.coverage.reportPaths=coverage.xml

      # Scan for vulnerabilities using Snyk
      - name: Run Snyk Vulnerability Scan
        uses: snyk/actions@v1
        with:
          args: monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}


      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python-github-actions:latest .

      # Scan Docker image for vulnerabilities
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/python-github-actions:latest
          severity: HIGH,CRITICAL

      # Push Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-github-actions:latest

      # Documentation and artifact upload
      - name: Upload Documentation
        uses: actions/upload-artifact@v3
        with:
          name: CI-CD-Documentation
          path: README.md
